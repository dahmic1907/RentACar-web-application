// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentAndGo.Data;

namespace RentAndGo.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210527204902_Migracija2")]
    partial class Migracija2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RentAndGo.Models.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("RentAndGo.Models.BankovniRacun", b =>
                {
                    b.Property<string>("BrojRacuna")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("DatumValidnostiKartice")
                        .HasColumnType("datetime");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BrojRacuna");

                    b.ToTable("BankovniRacun");
                });

            modelBuilder.Entity("RentAndGo.Models.Iznajmljivanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cijena")
                        .HasColumnType("double");

                    b.Property<DateTime>("DatumPreuzmanja")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumVracanja")
                        .HasColumnType("datetime");

                    b.Property<int>("IDAdmin")
                        .HasColumnType("int");

                    b.Property<int>("IDKlijenta")
                        .HasColumnType("int");

                    b.Property<int>("IDVozaca")
                        .HasColumnType("int");

                    b.Property<int>("IDVozila")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .HasColumnType("text");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NacinPlacanja")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Popust")
                        .HasColumnType("int");

                    b.Property<int>("Stanje")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Iznajmljivanje");
                });

            modelBuilder.Entity("RentAndGo.Models.KorisnikSaNalogom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BankovniRacunBrojRacuna")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BrojVozackeDozvole")
                        .HasColumnType("text");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("BankovniRacunBrojRacuna");

                    b.ToTable("KorisnikSaNalogom");
                });

            modelBuilder.Entity("RentAndGo.Models.Vozac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BrojVozackeDozvole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Vozac");
                });

            modelBuilder.Entity("RentAndGo.Models.VozackaDozvola", b =>
                {
                    b.Property<int>("BrojVozackeDozvole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Kategorija")
                        .HasColumnType("int");

                    b.Property<string>("NadlezniOrgan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BrojVozackeDozvole");

                    b.ToTable("VozackaDozvola");
                });

            modelBuilder.Entity("RentAndGo.Models.Vozilo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AluminijskeFelge")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("BoardComputer")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BrojRegistacijskihTablica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CijenaPoDanu")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumTehnickogPregleda")
                        .HasColumnType("datetime");

                    b.Property<int>("Gorivo")
                        .HasColumnType("int");

                    b.Property<int>("Klasa")
                        .HasColumnType("int");

                    b.Property<bool>("Klima")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MP3Interfejs")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaksimalanBrojPutnika")
                        .HasColumnType("int");

                    b.Property<int>("Mjenjac")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SistemBezKljuca")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SklopiviRetrovizori")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SlikaVozila")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vozilo");
                });

            modelBuilder.Entity("RentAndGo.Models.KorisnikSaNalogom", b =>
                {
                    b.HasOne("RentAndGo.Models.BankovniRacun", "BankovniRacun")
                        .WithMany()
                        .HasForeignKey("BankovniRacunBrojRacuna");
                });
#pragma warning restore 612, 618
        }
    }
}
